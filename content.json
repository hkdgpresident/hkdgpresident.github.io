{"meta":{"title":"黑客帝国","subtitle":"My Princess","description":"从来没有真正的绝境，只有心灵的迷途","author":"黑客帝国","url":"http://hkdgpresident.github.io","root":"/"},"pages":[{"title":"","date":"2020-05-09T11:51:36.405Z","updated":"2020-05-09T11:51:36.405Z","comments":true,"path":"404.html","permalink":"http://hkdgpresident.github.io/404.html","excerpt":"","text":"title: 404 date: 2020-05-09 17:51:10 type: &quot;404&quot; layout: &quot;404&quot; description: &quot;(⊙o⊙)…哦呦 崩溃啦 &quot; ---"},{"title":"categories","date":"2020-05-07T11:07:05.000Z","updated":"2020-05-07T11:07:58.479Z","comments":true,"path":"categories/index.html","permalink":"http://hkdgpresident.github.io/categories/index.html","excerpt":"","text":""},{"title":"friends","date":"2020-05-07T11:11:00.000Z","updated":"2020-05-07T11:11:50.718Z","comments":true,"path":"friends/index.html","permalink":"http://hkdgpresident.github.io/friends/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-05-07T11:08:32.000Z","updated":"2020-05-07T11:09:20.942Z","comments":true,"path":"tags/index.html","permalink":"http://hkdgpresident.github.io/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2020-05-10T03:44:32.000Z","updated":"2020-05-10T03:44:32.912Z","comments":true,"path":"about/index.html","permalink":"http://hkdgpresident.github.io/about/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"archives","date":"2020-05-10T03:54:48.000Z","updated":"2020-05-10T03:57:20.960Z","comments":true,"path":"archives/index.html","permalink":"http://hkdgpresident.github.io/archives/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"contact","date":"2020-05-10T03:52:23.000Z","updated":"2020-05-10T03:56:05.469Z","comments":true,"path":"contact/index.html","permalink":"http://hkdgpresident.github.io/contact/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"index","date":"2020-05-10T03:54:04.000Z","updated":"2020-05-10T03:56:42.401Z","comments":true,"path":"index/index.html","permalink":"http://hkdgpresident.github.io/index/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"}],"posts":[{"title":"Use Images in Typora","slug":"Use Images in Typora","date":"2020-05-08T12:03:11.088Z","updated":"2020-05-09T14:36:41.047Z","comments":true,"path":"2020/05/0836522.html","link":"","permalink":"http://hkdgpresident.github.io/2020/05/0836522.html","excerpt":"","text":"First blogImages in MarkdownIn markdown, image is written like ![alt](src). The src here can either be a url like https://octodex.github.com/images/yaktocat.png, or an absolute/relative file path, like ../images/test.png. More Topics about Image: [TOC] How to insert images in TyporaWrite the MarkdownYou could simply write down the markdown syntax to insert the image. Or click “image” from menubar, or press the shortcut key. When you do this, and meanwhile, if there is an image url in clipboard, then the url will be inserted into the src part directly. Drag &amp; DropOf course, there’s a easier way — drag &amp; drop, like the screencast below. You could also drag &amp; drop multiple image files at one time. Select from local filesYou could click menu item Edit → Image Tools → Insert Local Images… from menu bar to open a dialog to select and insert local image(s). If you use this menu item frequently, we would suggest you to re-assign the shortcut key for this “insert image” command following Custom Key Binding. Paste images from clipboardSince Markdown file is only plain text file, users could not insert image data into Markdown file directly, but can insert image reference to file/url. Typora support paste image data from clipboard, after telling typora where to put those images. Typora would put image data into given folder or server, then insert images referring to that stored file or url. Please refer to section When insert local image… for more detail. Tips: on macOS, users could copy image file from finder and then paste into typora. It has same behavior with drag and drop. Tips: on macOS, you could also copy images from iPhone and then paste into Typora after setup the location to put image files. When insert local image…Typora support copying image files into given folder or web server (require iPic) when insert local images using drag &amp; drop, or from menu bar. Following are instructions on the set-up. Default behaviorsBy default, when you insert or drag &amp; drop a image file into Typora, we will use the path of image file for attribute src. Use Relative PathIf you enable Editor → Image Insert → Use relative path if possible in preferences panel, and your writing has been saved into a file, then when you drag &amp; drop a local image, the src attribute will be set as its relative path to current file (folder). Copy image files to target folder when insert local image To use this feature, you need to opt-in the option Allow copy images to given folder in preferences panel. One common scenario is to edit *.md posts in static sites (like Jekyll) using Typora. For example, if the .*md file is put under _posts folder while the image files goes into _media folder, you may want to copy images files into folder _media when you drag/drop or paste images into Markdown file automatically. Here’s how: Save your file into some path. Enable Editor → Image Insert → Allow copy images to given folder in preferences panel. Select Edit → Image Tools → When Insert Local Images → Copy Image File to Folder from menubar, pick the target folder. In step 3, a new item typora-copy-images-to: {relative path} will be inserted into the YAML Front Matter block of current document. So you could also manually add typora-copy-images-to property in YAML Front Matter to enable this behaviour. After that, if you drag &amp; drop local images or paste images into Typora, the image file will be copied into the target file and update related src. Upload image file to web server. (macOS only) Requirements: macOS ≥ 10.11 and iPic to be installed. If you want to enable upload images automatically when typora-copy-images-to: ipic is set in YAML, option “Allow upload images automactially based on YAML settings” must be enabled first. Warning: By default, iPic will upload images to a public web server anonymously, and you won’t be able to delete image files from that web server once you upload into it. So please config iPic in advance if you want to enable this feature and control all image files you uploaded. Here’s how to enable this function: Install iPic and config a proper online image service. Enable Editor → Image Insert → Allow copy images to given folder in preferences panel. Check item Edit → Image Tools → When Insert Local Images → Upload Image via iPic from menubar. In step 3, a new item typora-copy-images-to: ipic will be inserted into the YAML Front Matter block of current document. So you could also manually add typora-copy-images-to: ipic property in YAML Front Matter to enable this behaviour. Tips: If you want to move image file to folder ipic, you should use typora-copy-images-to: ./ipic. Display images in relative pathRelative path to current file/folder (default behavior)By default, users could refer to local image by relative path to current *.md file. For example, if the *.md file is at /User/typora/desktop/test.md, then the ![img](image.png) will display image from /User/typora/desktop/image.png just like the &lt;img&gt; tag in HTML. Also, for ../download/image.png, image from /User/typora/download/image.png will be fetched. Relative path to certain folderIf you’re using markdown for building websites, you may specify a url prefix for image preview in local computer with property typora-root-url in YAML Front Matters. For example, input typora-root-url:/User/Abner/Website/typora.io/ in YAML Front Matters, and then ![alt](/blog/img/test.png) will be treated as ![alt](file:///User/Abner/Website/typora.io/blog/img/test.png) in typora. In new version, instead of manually input typora-root-url property, you could just click item from menubar Edit → Image Tools → Use Image Root Path to tell Typora to generate typora-root-url property automatically. Upload images to cloud server (macOS only)Introduction to iPic iPic is an app which allows you to upload local images into various cloud service, including Imgur, Flickr, Amazon S3, etc, and return you a web url of the uploaded image for public access. You could find detailed documents here. With the integration of iPic, users could share markdown file to others without packaging local images along with the plain text file. And users can stop caring about where to put local images or how to refer local images using relative path, since they can simply upload used images into cloud server. System requirements and preparation This feature only supports macOS ≥ 10.11. Must install latest version of iPic. Configure web server in iPic. Upload all local images to cloud serverTypora provides a function to upload all local images to cloud server via iPic. To use it, simply, check Edit → Image Tools → Upload Local Images via iPic from menubar and wait for the uploading process to be finished. Upload when inserting imagesHow-tos for this part can be found in section When insert local image… → Upload image file to web server. (macOS only). Align imagesCurrently Typora does not support image alignment. But you could use HTML code like &lt;center&gt;![img](src)&lt;/center&gt; to align images on exported HTML or PDF. Also, by default, if one paragraph only contains one image, it will be center aligned. It is controlled by CSS, and can be reverted by add custom CSS: p .md-image:only-child{ width: auto; text-align: inherit; } Resize imagesPlease check this link.","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-05-06T14:44:38.643Z","updated":"2020-05-09T14:36:41.051Z","comments":true,"path":"2020/05/0616107.html","link":"","permalink":"http://hkdgpresident.github.io/2020/05/0616107.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}